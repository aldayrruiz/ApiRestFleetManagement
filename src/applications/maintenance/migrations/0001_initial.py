# Generated by Django 4.1.2 on 2023-02-01 10:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenants', '0006_tenantbillingmonthlypdfreport_date_stored'),
        ('vehicles', '0007_vehicle_is_deleted'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cleaning',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateTimeField()),
                ('type', models.CharField(choices=[('Inside', 'Inside'), ('Outside', 'Outside')], default='Inside', max_length=10)),
                ('completed', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('NEW', 'NEW'), ('PENDING', 'PENDING'), ('EXPIRED', 'EXPIRED'), ('COMPLETED', 'COMPLETED')], default='PENDING', max_length=14)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('date_stored', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cleanings', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cleanings', to='tenants.tenant')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cleanings', to='vehicles.vehicle')),
            ],
            options={
                'db_table': 'Cleaning',
            },
        ),
        migrations.CreateModel(
            name='Itv',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateTimeField()),
                ('place', models.TextField()),
                ('passed', models.BooleanField()),
                ('next_revision', models.DateTimeField()),
                ('completed', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('NEW', 'NEW'), ('PENDING', 'PENDING'), ('EXPIRED', 'EXPIRED'), ('COMPLETED', 'COMPLETED')], default='NEW', max_length=14)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('date_stored', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itvs', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itvs', to='tenants.tenant')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itvs', to='vehicles.vehicle')),
            ],
            options={
                'db_table': 'Itv',
            },
        ),
        migrations.CreateModel(
            name='Odometer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateTimeField()),
                ('kilometers', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('completed', models.BooleanField(default=False)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('date_stored', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='odometers', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='odometers', to='tenants.tenant')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='odometers', to='vehicles.vehicle')),
            ],
            options={
                'db_table': 'Odometer',
            },
        ),
        migrations.CreateModel(
            name='Revision',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateTimeField()),
                ('kilometers', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('motive', models.TextField()),
                ('garage', models.TextField()),
                ('next_revision', models.DateTimeField()),
                ('next_kilometers', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('completed', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('NEW', 'NEW'), ('PENDING', 'PENDING'), ('EXPIRED', 'EXPIRED'), ('COMPLETED', 'COMPLETED')], default='NEW', max_length=14)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('date_stored', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revisions', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revisions', to='tenants.tenant')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revisions', to='vehicles.vehicle')),
            ],
            options={
                'db_table': 'Revision',
            },
        ),
        migrations.CreateModel(
            name='Wheels',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateTimeField()),
                ('location', models.CharField(choices=[('Front', 'Front'), ('Back', 'Back'), ('Both', 'Both')], default='Front', max_length=10)),
                ('kilometers', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('operation', models.CharField(choices=[('Inspection', 'Inspection'), ('Substitution', 'Substitution')], default='Inspection', max_length=12)),
                ('passed', models.BooleanField(default=False)),
                ('next_revision', models.DateTimeField()),
                ('next_kilometers', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('completed', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('NEW', 'NEW'), ('PENDING', 'PENDING'), ('EXPIRED', 'EXPIRED'), ('COMPLETED', 'COMPLETED')], default='NEW', max_length=14)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('date_stored', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wheels', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wheels', to='tenants.tenant')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wheels', to='vehicles.vehicle')),
            ],
            options={
                'db_table': 'Wheels',
            },
        ),
        migrations.CreateModel(
            name='WheelsPhoto',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('photo', models.ImageField(default='maintenance/wheels/none.png', upload_to='maintenance/wheels')),
                ('date_stored', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wheels_photos', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wheels_photos', to='tenants.tenant')),
                ('wheels', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='maintenance.wheels')),
            ],
            options={
                'db_table': 'WheelsPhoto',
            },
        ),
        migrations.CreateModel(
            name='WheelsCard',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_period', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('km_period', models.IntegerField(null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('date_stored', models.DateTimeField(auto_now_add=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenants.tenant')),
                ('vehicle', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wheels_card', to='vehicles.vehicle')),
            ],
            options={
                'db_table': 'WheelsCard',
            },
        ),
        migrations.CreateModel(
            name='RevisionPhoto',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('photo', models.ImageField(default='maintenance/revision/none.png', upload_to='maintenance/revision')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('date_stored', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revision_photos', to=settings.AUTH_USER_MODEL)),
                ('revision', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='maintenance.revision')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revision_photos', to='tenants.tenant')),
            ],
            options={
                'db_table': 'RevisionPhoto',
            },
        ),
        migrations.CreateModel(
            name='OdometerPhoto',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('photo', models.ImageField(default='maintenance/odometer/none.png', upload_to='maintenance/odometer')),
                ('date_stored', models.DateTimeField(auto_now_add=True)),
                ('odometer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='maintenance.odometer')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='odometer_photos', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenants.tenant')),
            ],
            options={
                'db_table': 'OdometerPhoto',
            },
        ),
        migrations.CreateModel(
            name='ItvPhoto',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('photo', models.ImageField(default='maintenance/itv/none.png', upload_to='maintenance/itv')),
                ('date_stored', models.DateTimeField(auto_now_add=True)),
                ('itv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='maintenance.itv')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itv_photos', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenants.tenant')),
            ],
            options={
                'db_table': 'ItvPhoto',
            },
        ),
        migrations.CreateModel(
            name='CleaningPhoto',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('photo', models.ImageField(default='maintenance/cleaning/none.png', upload_to='maintenance/cleaning')),
                ('date_stored', models.DateTimeField(auto_now_add=True)),
                ('cleaning', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='maintenance.cleaning')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cleaning_photos', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenants.tenant')),
            ],
            options={
                'db_table': 'CleaningPhoto',
            },
        ),
        migrations.CreateModel(
            name='CleaningCard',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_period', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('date_stored', models.DateTimeField(auto_now_add=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenants.tenant')),
                ('vehicle', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cleaning_card', to='vehicles.vehicle')),
            ],
            options={
                'db_table': 'CleaningCard',
            },
        ),
    ]
